{"reExports":[],"name":"Control.Comonad.Env.Class","comments":"This module defines the `ComonadEnv` type class and its instances.\n","declarations":[{"children":[{"comments":null,"title":"ask","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"w"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},null]}},"sourceSpan":{"start":[15,3],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Env/Class.purs","end":[15,28]}},{"comments":null,"title":"comonadAskTuple","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Class"],"ComonadAsk"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[35,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Env/Class.purs","end":[36,12]}},{"comments":null,"title":"comonadAskEnvT","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Comonad"],"Comonad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Class"],"ComonadAsk"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[41,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Env/Class.purs","end":[42,23]}}],"comments":"The `ComonadEnv` type class represents those comonads which support a\nglobal environment that can be provided via the `ask` function.\n\nAn implementation is provided for `EnvT`.\n","title":"ComonadAsk","info":{"fundeps":[[["w"],["e"]]],"arguments":[["e",null],["w",null]],"declType":"typeClass","superclasses":[{"constraintAnn":[],"constraintClass":[["Control","Comonad"],"Comonad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null}]},"sourceSpan":{"start":[14,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Env/Class.purs","end":[15,28]}},{"children":[],"comments":"Get a value which depends on the environment.\n","title":"asks","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["w",{"annotation":[],"tag":"ForAll","contents":["e2",{"annotation":[],"tag":"ForAll","contents":["e1",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Comonad","Env","Class"],"ComonadEnv"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"e1"},{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"e1"}]},{"annotation":[],"tag":"TypeVar","contents":"e2"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"w"},{"annotation":[],"tag":"TypeVar","contents":"e1"}]}]},{"annotation":[],"tag":"TypeVar","contents":"e2"}]}]}]},null]},null]},null]}},"sourceSpan":{"start":[18,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Env/Class.purs","end":[18,68]}},{"children":[{"comments":null,"title":"local","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"w"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeVar","contents":"w"},{"annotation":[],"tag":"TypeVar","contents":"a"}]}]}]},null]}},"sourceSpan":{"start":[33,3],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Env/Class.purs","end":[33,44]}},{"comments":null,"title":"comonadEnvTuple","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Class"],"ComonadEnv"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]}]}},"sourceSpan":{"start":[38,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Env/Class.purs","end":[39,38]}},{"comments":null,"title":"comonadEnvEnvT","info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintClass":[["Control","Comonad"],"Comonad"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null}],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Class"],"ComonadEnv"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"annotation":[],"tag":"TypeVar","contents":"e"}]},{"annotation":[],"tag":"TypeVar","contents":"w"}]}]}},"sourceSpan":{"start":[44,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Env/Class.purs","end":[46,31]}}],"comments":"The `ComonadEnv` type class extends `ComonadAsk` with a function\n`local f x` that allows the value of the local context to be modified for\nthe duration of the execution of action `x`.\n\nAn implementation is provided for `EnvT`.\n\nLaws:\n\n- `ask (local f x) = f (ask x)`\n- `extract (local _ x) = extract a`\n- `extend g (local f x) = extend (g <<< local f) x`\n","title":"ComonadEnv","info":{"fundeps":[[["w"],["e"]]],"arguments":[["e",null],["w",null]],"declType":"typeClass","superclasses":[{"constraintAnn":[],"constraintClass":[["Control","Comonad","Env","Class"],"ComonadAsk"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"e"},{"annotation":[],"tag":"TypeVar","contents":"w"}],"constraintData":null}]},"sourceSpan":{"start":[32,1],"name":".spago/transformers/v4.2.0/src/Control/Comonad/Env/Class.purs","end":[33,44]}}]}