{"reExports":[],"name":"Global.Unsafe","comments":null,"declarations":[{"children":[],"comments":"Uses the global JSON object to turn anything into a string. Careful! Trying\nto serialize functions returns undefined\n","title":"unsafeStringify","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["a",{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},null]}},"sourceSpan":{"start":[5,1],"name":".spago/globals/v4.1.0/src/Global/Unsafe.purs","end":[5,56]}},{"children":[],"comments":"Formats Number as a String with limited number of digits after the dot.\n\nMay throw RangeError if the number of digits is not within the allowed range\n(standard precision range is 0 to 20, but implementations may change it)\n","title":"unsafeToFixed","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[11,1],"name":".spago/globals/v4.1.0/src/Global/Unsafe.purs","end":[11,56]}},{"children":[],"comments":"Formats Number as String in exponential notation limiting number of digits\nafter the decimal dot.\n\nMay throw RangeError if the number of digits is not within the allowed range\n(standard precision range is 0 to 20, but implementations may change it)\n","title":"unsafeToExponential","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[18,1],"name":".spago/globals/v4.1.0/src/Global/Unsafe.purs","end":[18,62]}},{"children":[],"comments":"Formats Number as String in fixed-point or exponential notation rounded\nto specified number of significant digits.\n\nMay throw RangeError if the number of digits is not within the allowed range\n(standard precision range is 0 to 100, but implementations may change it)\n","title":"unsafeToPrecision","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[25,1],"name":".spago/globals/v4.1.0/src/Global/Unsafe.purs","end":[25,60]}},{"children":[],"comments":"URI decoding. May throw a `URIError` if given a value with undecodeable\nescape sequences.\n","title":"unsafeDecodeURI","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[29,1],"name":".spago/globals/v4.1.0/src/Global/Unsafe.purs","end":[29,51]}},{"children":[],"comments":"URI encoding. May throw a `URIError` if given a value with unencodeable\ncharacters.\n","title":"unsafeEncodeURI","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[33,1],"name":".spago/globals/v4.1.0/src/Global/Unsafe.purs","end":[33,51]}},{"children":[],"comments":"URI component decoding. May throw a `URIError` if given a value with\nundecodeable escape sequences.\n","title":"unsafeDecodeURIComponent","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[37,1],"name":".spago/globals/v4.1.0/src/Global/Unsafe.purs","end":[37,60]}},{"children":[],"comments":"URI component encoding. May throw a `URIError` if given a value with\nunencodeable characters.\n","title":"unsafeEncodeURIComponent","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[41,1],"name":".spago/globals/v4.1.0/src/Global/Unsafe.purs","end":[41,60]}}]}