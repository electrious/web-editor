// Generated by purs version 0.13.6
"use strict";
var Data_Array = require("../Data.Array/index.js");
var Data_Bounded = require("../Data.Bounded/index.js");
var Data_Enum = require("../Data.Enum/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Generic_Rep_Bounded = require("../Data.Generic.Rep.Bounded/index.js");
var Data_Generic_Rep_Enum = require("../Data.Generic.Rep.Enum/index.js");
var Data_Generic_Rep_Show = require("../Data.Generic.Rep.Show/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_UUID = require("../Data.UUID/index.js");
var $$Math = require("../Math/index.js");
var Math_Angle = require("../Math.Angle/index.js");
var Three_Math_Vector = require("../Three.Math.Vector/index.js");
var Landscape = (function () {
    function Landscape() {

    };
    Landscape.value = new Landscape();
    return Landscape;
})();
var Portrait = (function () {
    function Portrait() {

    };
    Portrait.value = new Portrait();
    return Portrait;
})();
var Grid = (function () {
    function Grid() {

    };
    Grid.value = new Grid();
    return Grid;
})();
var Brick = (function () {
    function Brick() {

    };
    Brick.value = new Brick();
    return Brick;
})();
var RoofOpCreate = (function () {
    function RoofOpCreate(value0) {
        this.value0 = value0;
    };
    RoofOpCreate.create = function (value0) {
        return new RoofOpCreate(value0);
    };
    return RoofOpCreate;
})();
var RoofOpDelete = (function () {
    function RoofOpDelete(value0) {
        this.value0 = value0;
    };
    RoofOpDelete.create = function (value0) {
        return new RoofOpDelete(value0);
    };
    return RoofOpDelete;
})();
var RoofOpUpdate = (function () {
    function RoofOpUpdate(value0) {
        this.value0 = value0;
    };
    RoofOpUpdate.create = function (value0) {
        return new RoofOpUpdate(value0);
    };
    return RoofOpUpdate;
})();
var vec2Point = function (v) {
    return {
        x: Three_Math_Vector.vecX(Three_Math_Vector.hasXVec3)(v),
        y: Three_Math_Vector.vecY(Three_Math_Vector.hasYVec3)(v),
        z: Three_Math_Vector.vecZ(Three_Math_Vector.hasZVec3)(v)
    };
};
var rafterVector = Three_Math_Vector.cross(Three_Math_Vector.vecVec3);
var gutterVector = function (normal) {
    var ny = Three_Math_Vector.vecY(Three_Math_Vector.hasYVec3)(normal);
    var nx = Three_Math_Vector.vecX(Three_Math_Vector.hasXVec3)(normal);
    var c = nx / ny;
    var x = $$Math.sqrt(1.0 / (1.0 + c * c));
    var y = -x * c;
    return Three_Math_Vector.mkVec3(x)(y)(0.0);
};
var toRoofEdited = function (r) {
    var gutter = gutterVector(r.normal);
    var rafter = rafterVector(r.normal)(gutter);
    return {
        ground: vec2Point(gutter),
        inclined: vec2Point(rafter),
        contours: Data_Functor.map(Data_Functor.functorArray)(vec2Point)(r.borderPoints),
        indices: Data_Array.range(1)(Data_Array.length(r.borderPoints))
    };
};
var getRoofPolygon = function (r) {
    var f = function (v) {
        return Three_Math_Vector.mkVec2(Three_Math_Vector.vecX(Three_Math_Vector.hasXVec3)(v))(Three_Math_Vector.vecY(Three_Math_Vector.hasYVec3)(v));
    };
    return Data_Functor.map(Data_Functor.functorArray)(f)(r.borderPoints);
};
var getAzimuth = function (normal) {
    var ang = Math_Angle.atan2(Three_Math_Vector.vecX(Three_Math_Vector.hasXVec3)(normal))(Three_Math_Vector.vecY(Three_Math_Vector.hasYVec3)(normal));
    var a = Math_Angle.degreeVal(ang);
    var $24 = a > 360.0;
    if ($24) {
        return Math_Angle.degree(a - 360.0);
    };
    var $25 = a < 0.0;
    if ($25) {
        return Math_Angle.degree(a + 360.0);
    };
    return ang;
};
var genericRoofOp = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof RoofOpCreate) {
        return new Data_Generic_Rep.Inl(x.value0);
    };
    if (x instanceof RoofOpDelete) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
    };
    if (x instanceof RoofOpUpdate) {
        return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
    };
    throw new Error("Failed pattern match at Models.RoofPlate (line 206, column 1 - line 206, column 57): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return new RoofOpCreate(x.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
        return new RoofOpDelete(x.value0.value0);
    };
    if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
        return new RoofOpUpdate(x.value0.value0);
    };
    throw new Error("Failed pattern match at Models.RoofPlate (line 206, column 1 - line 206, column 57): " + [ x.constructor.name ]);
});
var genericOrient = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Landscape) {
        return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    };
    if (x instanceof Portrait) {
        return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
    };
    throw new Error("Failed pattern match at Models.RoofPlate (line 22, column 1 - line 22, column 55): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return Landscape.value;
    };
    if (x instanceof Data_Generic_Rep.Inr) {
        return Portrait.value;
    };
    throw new Error("Failed pattern match at Models.RoofPlate (line 22, column 1 - line 22, column 55): " + [ x.constructor.name ]);
});
var showOrient = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericOrient)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Landscape";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Portrait";
})))));
var genericAlignment = new Data_Generic_Rep.Generic(function (x) {
    if (x instanceof Grid) {
        return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
    };
    if (x instanceof Brick) {
        return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
    };
    throw new Error("Failed pattern match at Models.RoofPlate (line 47, column 1 - line 47, column 56): " + [ x.constructor.name ]);
}, function (x) {
    if (x instanceof Data_Generic_Rep.Inl) {
        return Grid.value;
    };
    if (x instanceof Data_Generic_Rep.Inr) {
        return Brick.value;
    };
    throw new Error("Failed pattern match at Models.RoofPlate (line 47, column 1 - line 47, column 56): " + [ x.constructor.name ]);
});
var showAlignment = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericAlignment)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Grid";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
    return "Brick";
})))));
var showRoofOp = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericRoofOp)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "alignment";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "azimuth";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "borderPoints";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "center";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "coefs";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "id";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "intId";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "leadId";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "normal";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "orientation";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "rotation";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "slope";
}))(Data_Show.showRecordFieldsNil)(Math_Angle.showAngle))(Math_Angle.showAngle))(showOrient))(Three_Math_Vector.showVec3))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showArray(Data_Show.showNumber)))(Three_Math_Vector.showVec3))(Data_Show.showArray(Three_Math_Vector.showVec3)))(Math_Angle.showAngle))(showAlignment))))(new Data_Symbol.IsSymbol(function () {
    return "RoofOpCreate";
})))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showString))(new Data_Symbol.IsSymbol(function () {
    return "RoofOpDelete";
})))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "alignment";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "azimuth";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "borderPoints";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "center";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "coefs";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "id";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "intId";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "leadId";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "normal";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "orientation";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "rotation";
}))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
    return "slope";
}))(Data_Show.showRecordFieldsNil)(Math_Angle.showAngle))(Math_Angle.showAngle))(showOrient))(Three_Math_Vector.showVec3))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showString))(Data_Show.showArray(Data_Show.showNumber)))(Three_Math_Vector.showVec3))(Data_Show.showArray(Three_Math_Vector.showVec3)))(Math_Angle.showAngle))(showAlignment))))(new Data_Symbol.IsSymbol(function () {
    return "RoofOpUpdate";
}))))));
var eqOrient = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Landscape && y instanceof Landscape) {
            return true;
        };
        if (x instanceof Portrait && y instanceof Portrait) {
            return true;
        };
        return false;
    };
});
var ordOrient = new Data_Ord.Ord(function () {
    return eqOrient;
}, function (x) {
    return function (y) {
        if (x instanceof Landscape && y instanceof Landscape) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Landscape) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Landscape) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Portrait && y instanceof Portrait) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Models.RoofPlate (line 24, column 1 - line 24, column 45): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var eqAlignment = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Grid && y instanceof Grid) {
            return true;
        };
        if (x instanceof Brick && y instanceof Brick) {
            return true;
        };
        return false;
    };
});
var eqRoofOp = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof RoofOpCreate && y instanceof RoofOpCreate) {
            return Data_Eq.eq(eqAlignment)(x.value0.alignment)(y.value0.alignment) && Data_Eq.eq(Math_Angle.eqAngle)(x.value0.azimuth)(y.value0.azimuth) && Data_Eq.eq(Data_Eq.eqArray(Three_Math_Vector.eqVec3))(x.value0.borderPoints)(y.value0.borderPoints) && Data_Eq.eq(Three_Math_Vector.eqVec3)(x.value0.center)(y.value0.center) && Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqNumber))(x.value0.coefs)(y.value0.coefs) && x.value0.id === y.value0.id && x.value0.intId === y.value0.intId && x.value0.leadId === y.value0.leadId && Data_Eq.eq(Three_Math_Vector.eqVec3)(x.value0.normal)(y.value0.normal) && Data_Eq.eq(eqOrient)(x.value0.orientation)(y.value0.orientation) && Data_Eq.eq(Math_Angle.eqAngle)(x.value0.rotation)(y.value0.rotation) && Data_Eq.eq(Math_Angle.eqAngle)(x.value0.slope)(y.value0.slope);
        };
        if (x instanceof RoofOpDelete && y instanceof RoofOpDelete) {
            return x.value0 === y.value0;
        };
        if (x instanceof RoofOpUpdate && y instanceof RoofOpUpdate) {
            return Data_Eq.eq(eqAlignment)(x.value0.alignment)(y.value0.alignment) && Data_Eq.eq(Math_Angle.eqAngle)(x.value0.azimuth)(y.value0.azimuth) && Data_Eq.eq(Data_Eq.eqArray(Three_Math_Vector.eqVec3))(x.value0.borderPoints)(y.value0.borderPoints) && Data_Eq.eq(Three_Math_Vector.eqVec3)(x.value0.center)(y.value0.center) && Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqNumber))(x.value0.coefs)(y.value0.coefs) && x.value0.id === y.value0.id && x.value0.intId === y.value0.intId && x.value0.leadId === y.value0.leadId && Data_Eq.eq(Three_Math_Vector.eqVec3)(x.value0.normal)(y.value0.normal) && Data_Eq.eq(eqOrient)(x.value0.orientation)(y.value0.orientation) && Data_Eq.eq(Math_Angle.eqAngle)(x.value0.rotation)(y.value0.rotation) && Data_Eq.eq(Math_Angle.eqAngle)(x.value0.slope)(y.value0.slope);
        };
        return false;
    };
});
var ordAlighment = new Data_Ord.Ord(function () {
    return eqAlignment;
}, function (x) {
    return function (y) {
        if (x instanceof Grid && y instanceof Grid) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Grid) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Grid) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Brick && y instanceof Brick) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at Models.RoofPlate (line 46, column 1 - line 46, column 46): " + [ x.constructor.name, y.constructor.name ]);
    };
});
var enumOrient = new Data_Enum.Enum(function () {
    return ordOrient;
}, Data_Generic_Rep_Enum.genericPred(genericOrient)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))), Data_Generic_Rep_Enum.genericSucc(genericOrient)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))));
var enumAlignment = new Data_Enum.Enum(function () {
    return ordAlighment;
}, Data_Generic_Rep_Enum.genericPred(genericAlignment)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))), Data_Generic_Rep_Enum.genericSucc(genericAlignment)(Data_Generic_Rep_Enum.genericEnumSum(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))(Data_Generic_Rep_Enum.genericEnumConstructor(Data_Generic_Rep_Enum.genericEnumNoArguments))(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))));
var defBorderPoints = function (center) {
    return function (gutter) {
        return function (rafter) {
            var m2 = Three_Math_Vector.addScaled(Three_Math_Vector.vecVec3)(center)(gutter)(-2.0);
            var p3 = Three_Math_Vector.addScaled(Three_Math_Vector.vecVec3)(m2)(rafter)(-2.0);
            var p4 = Three_Math_Vector.addScaled(Three_Math_Vector.vecVec3)(m2)(rafter)(2.0);
            var m1 = Three_Math_Vector.addScaled(Three_Math_Vector.vecVec3)(center)(gutter)(2.0);
            var p1 = Three_Math_Vector.addScaled(Three_Math_Vector.vecVec3)(m1)(rafter)(2.0);
            var p2 = Three_Math_Vector.addScaled(Three_Math_Vector.vecVec3)(m1)(rafter)(-2.0);
            return [ p1, p2, p3, p4, p1 ];
        };
    };
};
var boundedOrient = new Data_Bounded.Bounded(function () {
    return ordOrient;
}, Data_Generic_Rep_Bounded.genericBottom(genericOrient)(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))), Data_Generic_Rep_Bounded.genericTop(genericOrient)(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))));
var boundenumOrient = new Data_Enum.BoundedEnum(function () {
    return boundedOrient;
}, function () {
    return enumOrient;
}, Data_Generic_Rep_Enum.genericCardinality(genericOrient)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))), Data_Generic_Rep_Enum.genericFromEnum(genericOrient)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))), Data_Generic_Rep_Enum.genericToEnum(genericOrient)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))));
var boundedAlignment = new Data_Bounded.Bounded(function () {
    return ordAlighment;
}, Data_Generic_Rep_Bounded.genericBottom(genericAlignment)(Data_Generic_Rep_Bounded.genericBottomSum(Data_Generic_Rep_Bounded.genericBottomConstructor(Data_Generic_Rep_Bounded.genericBottomNoArguments))), Data_Generic_Rep_Bounded.genericTop(genericAlignment)(Data_Generic_Rep_Bounded.genericTopSum(Data_Generic_Rep_Bounded.genericTopConstructor(Data_Generic_Rep_Bounded.genericTopNoArguments))));
var boundedEnumALignment = new Data_Enum.BoundedEnum(function () {
    return boundedAlignment;
}, function () {
    return enumAlignment;
}, Data_Generic_Rep_Enum.genericCardinality(genericAlignment)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))), Data_Generic_Rep_Enum.genericFromEnum(genericAlignment)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))), Data_Generic_Rep_Enum.genericToEnum(genericAlignment)(Data_Generic_Rep_Enum.genericBoundedEnumSum(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))(Data_Generic_Rep_Enum.genericBoundedEnumConstructor(Data_Generic_Rep_Enum.genericBoundedEnumNoArguments))));
var arrVec = function (v) {
    if (v.length === 3) {
        return Three_Math_Vector.mkVec3(v[0])(v[1])(v[2]);
    };
    return Three_Math_Vector.mkVec3(0.0)(0.0)(0.0);
};
var fromJSRoofPlate = function (r) {
    return {
        id: r.uuid,
        intId: r.id,
        leadId: r.lead_id,
        borderPoints: Data_Functor.map(Data_Functor.functorArray)(function (v) {
            return Three_Math_Vector.mkVec3(v.x)(v.y)(v.z);
        })(r.border_points),
        coefs: r.coefs,
        center: arrVec(r.center),
        normal: arrVec(r.normal),
        orientation: Data_Maybe.fromMaybe(Landscape.value)(Data_Enum.toEnum(boundenumOrient)(r.orientation)),
        alignment: Data_Maybe.fromMaybe(Grid.value)(Data_Enum.toEnum(boundedEnumALignment)(r.alignment)),
        slope: Math_Angle.degree(r.slope),
        azimuth: Math_Angle.degree(r.azimuth),
        rotation: Math_Angle.degree(r.rotation_override)
    };
};
var angleBetween = function (dictVector) {
    return function (v1) {
        return function (v2) {
            var d = Three_Math_Vector.dot(dictVector)(v1)(v2);
            return Math_Angle.acos(d / (Three_Math_Vector.length(dictVector)(v1) * Three_Math_Vector.length(dictVector)(v2)));
        };
    };
};
var newRoofPlate = function (center) {
    return function (normal) {
        return function __do() {
            var u = Data_UUID.genUUID();
            var projN = Three_Math_Vector.mkVec3(Three_Math_Vector.vecX(Three_Math_Vector.hasXVec3)(normal))(Three_Math_Vector.vecY(Three_Math_Vector.hasYVec3)(normal))(0.0);
            var gutter = gutterVector(normal);
            var rafter = rafterVector(normal)(gutter);
            var borderPoints = defBorderPoints(center)(gutter)(rafter);
            var azimuth = getAzimuth(normal);
            var angle = angleBetween(Three_Math_Vector.vecVec3)(normal)(projN);
            var slope = Math_Angle.degree(90.0 - Math_Angle.degreeVal(angle));
            return {
                id: Data_UUID.toString(u),
                intId: 0,
                leadId: 0,
                borderPoints: borderPoints,
                coefs: [  ],
                center: center,
                normal: normal,
                orientation: Landscape.value,
                alignment: Brick.value,
                slope: slope,
                azimuth: azimuth,
                rotation: Math_Angle.degree(0.0)
            };
        };
    };
};
module.exports = {
    Landscape: Landscape,
    Portrait: Portrait,
    Grid: Grid,
    Brick: Brick,
    arrVec: arrVec,
    fromJSRoofPlate: fromJSRoofPlate,
    getRoofPolygon: getRoofPolygon,
    angleBetween: angleBetween,
    gutterVector: gutterVector,
    rafterVector: rafterVector,
    defBorderPoints: defBorderPoints,
    getAzimuth: getAzimuth,
    newRoofPlate: newRoofPlate,
    RoofOpCreate: RoofOpCreate,
    RoofOpDelete: RoofOpDelete,
    RoofOpUpdate: RoofOpUpdate,
    vec2Point: vec2Point,
    toRoofEdited: toRoofEdited,
    genericOrient: genericOrient,
    eqOrient: eqOrient,
    ordOrient: ordOrient,
    boundedOrient: boundedOrient,
    enumOrient: enumOrient,
    boundenumOrient: boundenumOrient,
    showOrient: showOrient,
    eqAlignment: eqAlignment,
    ordAlighment: ordAlighment,
    genericAlignment: genericAlignment,
    enumAlignment: enumAlignment,
    boundedAlignment: boundedAlignment,
    boundedEnumALignment: boundedEnumALignment,
    showAlignment: showAlignment,
    genericRoofOp: genericRoofOp,
    eqRoofOp: eqRoofOp,
    showRoofOp: showRoofOp
};
