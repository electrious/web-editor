{"reExports":[],"name":"Data.String.CodeUnits","comments":null,"declarations":[{"children":[],"comments":"If the string starts with the given prefix, return the portion of the\nstring left after removing it, as a Just value. Otherwise, return Nothing.\n\n```purescript\nstripPrefix (Pattern \"http:\") \"http://purescript.org\" == Just \"//purescript.org\"\nstripPrefix (Pattern \"http:\") \"https://purescript.org\" == Nothing\n```\n","title":"stripPrefix","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}},"sourceSpan":{"start":[46,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[46,49]}},{"children":[],"comments":"If the string ends with the given suffix, return the portion of the\nstring left after removing it, as a `Just` value. Otherwise, return\n`Nothing`.\n\n```purescript\nstripSuffix (Pattern \".exe\") \"psc.exe\" == Just \"psc\"\nstripSuffix (Pattern \".exe\") \"psc\" == Nothing\n```\n","title":"stripSuffix","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}},"sourceSpan":{"start":[60,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[60,49]}},{"children":[],"comments":"Checks whether the pattern appears in the given string.\n\n```purescript\ncontains (Pattern \"needle\") \"haystack with needle\" == true\ncontains (Pattern \"needle\") \"haystack\" == false\n```\n","title":"contains","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}},"sourceSpan":{"start":[72,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[72,41]}},{"children":[],"comments":"Returns a string of length `1` containing the given character.\n\n```purescript\nsingleton 'l' == \"l\"\n```\n\n","title":"singleton","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[85,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[85,43]}},{"children":[],"comments":"Converts an array of characters into a string.\n\n```purescript\nfromCharArray ['H', 'e', 'l', 'l', 'o'] == \"Hello\"\n```\n","title":"fromCharArray","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}},"sourceSpan":{"start":[92,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[92,53]}},{"children":[],"comments":"Converts the string into an array of characters.\n\n```purescript\ntoCharArray \"Hello☺\\n\" == ['H','e','l','l','o','☺','\\n']\n```\n","title":"toCharArray","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}},"sourceSpan":{"start":[99,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[99,51]}},{"children":[],"comments":"Returns the character at the given index, if the index is within bounds.\n\n```purescript\ncharAt 2 \"Hello\" == Just 'l'\ncharAt 10 \"Hello\" == Nothing\n```\n\n","title":"charAt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}]}},"sourceSpan":{"start":[108,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[108,38]}},{"children":[],"comments":"Converts the string to a character, if the length of the string is\nexactly `1`.\n\n```purescript\ntoChar \"l\" == Just 'l'\ntoChar \"Hi\" == Nothing -- since length is not 1\n```\n","title":"toChar","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]}},"sourceSpan":{"start":[125,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[125,31]}},{"children":[],"comments":"Returns the first character and the rest of the string,\nif the string is not empty.\n\n```purescript\nuncons \"\" == Nothing\nuncons \"Hello World\" == Just { head: 'H', tail: \"ello World\" }\n```\n\n","title":"uncons","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["head",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]},{"annotation":[],"tag":"RCons","contents":["tail",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}},"sourceSpan":{"start":[142,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[142,59]}},{"children":[],"comments":"Returns the number of characters the string is composed of.\n\n```purescript\nlength \"Hello World\" == 11\n```\n\n","title":"length","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}},"sourceSpan":{"start":[152,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[152,39]}},{"children":[],"comments":"Returns the number of contiguous characters at the beginning\nof the string for which the predicate holds.\n\n```purescript\ncountPrefix (_ /= ' ') \"Hello World\" == 5 -- since length \"Hello\" == 5\n```\n\n","title":"countPrefix","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}},"sourceSpan":{"start":[161,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[161,65]}},{"children":[],"comments":"Returns the index of the first occurrence of the pattern in the\ngiven string. Returns `Nothing` if there is no match.\n\n```purescript\nindexOf (Pattern \"c\") \"abcdc\" == Just 2\nindexOf (Pattern \"c\") \"aaa\" == Nothing\n```\n\n","title":"indexOf","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}},"sourceSpan":{"start":[171,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[171,42]}},{"children":[],"comments":"Returns the index of the first occurrence of the pattern in the\ngiven string, starting at the specified index. Returns `Nothing` if there is\nno match.\n\n```purescript\nindexOf' (Pattern \"a\") 2 \"ababa\" == Just 2\nindexOf' (Pattern \"a\") 3 \"ababa\" == Just 4\n```\n\n","title":"indexOf'","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]}},"sourceSpan":{"start":[190,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[190,50]}},{"children":[],"comments":"Returns the index of the last occurrence of the pattern in the\ngiven string. Returns `Nothing` if there is no match.\n\n```purescript\nlastIndexOf (Pattern \"c\") \"abcdc\" == Just 4\nlastIndexOf (Pattern \"c\") \"aaa\" == Nothing\n```\n\n","title":"lastIndexOf","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}},"sourceSpan":{"start":[209,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[209,46]}},{"children":[],"comments":"Returns the index of the last occurrence of the pattern in the\ngiven string, starting at the specified index\nand searching backwards towards the beginning of the string.\nReturns `Nothing` if there is no match.\n\n```purescript\nlastIndexOf' (Pattern \"a\") 1 \"ababa\" == Just 0\nlastIndexOf' (Pattern \"a\") 3 \"ababa\" == Just 2\nlastIndexOf' (Pattern \"a\") 4 \"ababa\" == Just 4\n```\n\n","title":"lastIndexOf'","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]}},"sourceSpan":{"start":[230,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[230,54]}},{"children":[],"comments":"Returns the first `n` characters of the string.\n\n```purescript\ntake 5 \"Hello World\" == \"Hello\"\n```\n\n","title":"take","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[247,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[247,47]}},{"children":[],"comments":"Returns the last `n` characters of the string.\n\n```purescript\ntakeRight 5 \"Hello World\" == \"World\"\n```\n\n","title":"takeRight","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[255,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[255,37]}},{"children":[],"comments":"Returns the longest prefix (possibly empty) of characters that satisfy\nthe predicate.\n\n```purescript\ntakeWhile (_ /= ':') \"http://purescript.org\" == \"http\"\n```\n\n","title":"takeWhile","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[265,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[265,51]}},{"children":[],"comments":"Returns the string without the first `n` characters.\n\n```purescript\ndrop 6 \"Hello World\" == \"World\"\n```\n\n","title":"drop","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[274,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[274,47]}},{"children":[],"comments":"Returns the string without the last `n` characters.\n\n```purescript\ndropRight 6 \"Hello World\" == \"Hello\"\n```\n\n","title":"dropRight","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[282,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[282,37]}},{"children":[],"comments":"Returns the suffix remaining after `takeWhile`.\n\n```purescript\ndropWhile (_ /= '.') \"Test.purs\" == \".purs\"\n```\n\n","title":"dropWhile","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}},"sourceSpan":{"start":[291,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[291,51]}},{"children":[],"comments":"Returns the substring at indices `[begin, end)`.\nIf either index is negative, it is normalised to `length s - index`,\nwhere `s` is the input string. `Nothing` is returned if either\nindex is out of bounds or if `begin > end` after normalisation.\n\n```purescript\nslice 0 0   \"purescript\" == Just \"\"\nslice 0 1   \"purescript\" == Just \"p\"\nslice 3 6   \"purescript\" == Just \"esc\"\nslice (-4) (-1) \"purescript\" == Just \"rip\"\nslice (-4) 3  \"purescript\" == Nothing\n```\n","title":"slice","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}]}},"sourceSpan":{"start":[306,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[306,46]}},{"children":[],"comments":"Splits a string into two substrings, where `before` contains the\ncharacters up to (but not including) the given index, and `after` contains\nthe rest of the string, from that index on.\n\n```purescript\nsplitAt 2 \"Hello World\" == { before: \"He\", after: \"llo World\"}\nsplitAt 10 \"Hi\" == { before: \"Hi\", after: \"\"}\n```\n\nThus the length of `(splitAt i s).before` will equal either `i` or\n`length s`, if that is shorter. (Or if `i` is negative the length will be\n0.)\n\nIn code:\n```purescript\nlength (splitAt i s).before == min (max i 0) (length s)\n(splitAt i s).before <> (splitAt i s).after == s\nsplitAt i s == {before: take i s, after: drop i s}\n```\n","title":"splitAt","info":{"declType":"value","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"annotation":[],"tag":"RCons","contents":["before",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"RCons","contents":["after",{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"annotation":[],"tag":"REmpty"}]}]}]}]}]}},"sourceSpan":{"start":[340,1],"name":".spago/strings/v4.0.1/src/Data/String/CodeUnits.purs","end":[340,81]}}]}