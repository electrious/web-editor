{"reExports":[],"name":"Control.Lazy","comments":null,"declarations":[{"children":[{"comments":null,"title":"defer","info":{"declType":"typeClassMember","type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"annotation":[],"tag":"TypeVar","contents":"l"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"l"}]}},"sourceSpan":{"start":[11,3],"name":".spago/control/v4.2.0/src/Control/Lazy.purs","end":[11,28]}},{"comments":null,"title":"lazyFn","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Lazy"],"Lazy"]},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"a"}]},{"annotation":[],"tag":"TypeVar","contents":"b"}]}]}},"sourceSpan":{"start":[13,1],"name":".spago/control/v4.2.0/src/Control/Lazy.purs","end":[14,27]}},{"comments":null,"title":"lazyUnit","info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Control","Lazy"],"Lazy"]},{"annotation":[],"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}},"sourceSpan":{"start":[16,1],"name":".spago/control/v4.2.0/src/Control/Lazy.purs","end":[17,17]}}],"comments":"The `Lazy` class represents types which allow evaluation of values\nto be _deferred_.\n\nUsually, this means that a type contains a function arrow which can\nbe used to delay evaluation.\n","title":"Lazy","info":{"fundeps":[],"arguments":[["l",null]],"declType":"typeClass","superclasses":[]},"sourceSpan":{"start":[10,1],"name":".spago/control/v4.2.0/src/Control/Lazy.purs","end":[11,28]}},{"children":[],"comments":"`fix` defines a value as the fixed point of a function.\n\nThe `Lazy` instance allows us to generate the result lazily.\n","title":"fix","info":{"declType":"value","type":{"annotation":[],"tag":"ForAll","contents":["l",{"annotation":[],"tag":"ConstrainedType","contents":[{"constraintAnn":[],"constraintClass":[["Control","Lazy"],"Lazy"],"constraintArgs":[{"annotation":[],"tag":"TypeVar","contents":"l"}],"constraintData":null},{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"ParensInType","contents":{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeApp","contents":[{"annotation":[],"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"annotation":[],"tag":"TypeVar","contents":"l"}]},{"annotation":[],"tag":"TypeVar","contents":"l"}]}}]},{"annotation":[],"tag":"TypeVar","contents":"l"}]}]},null]}},"sourceSpan":{"start":[22,1],"name":".spago/control/v4.2.0/src/Control/Lazy.purs","end":[22,41]}}]}